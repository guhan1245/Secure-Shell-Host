===========================================================
⚙️  SSH INSTALLATION & SETUP – (UBUNTU)
===========================================================

===========================================================
📦  1. INSTALL OPENSSH SERVER & CLIENT
===========================================================

# Update package lists
sudo apt update

# Install OpenSSH server (to allow remote login)
sudo apt install openssh-server -y

# Install SSH client (for connecting to other servers)
sudo apt install openssh-client -y

# Verify installation
ssh -V
# Output example: OpenSSH_9.6p1 Ubuntu-3ubuntu13, OpenSSL 3.0.2 15 Mar 2022

===========================================================
🧠  2. ENABLE & START SSH SERVICE
===========================================================

# Enable SSH to start on boot
sudo systemctl enable ssh

# Start SSH service immediately
sudo systemctl start ssh

# Check SSH service status
sudo systemctl status ssh

# Restart SSH service after config changes
sudo systemctl restart ssh

# Stop SSH service
sudo systemctl stop ssh

===========================================================
🛠️  3. CONFIGURE SSH SETTINGS
===========================================================

# Main configuration file
sudo nano /etc/ssh/sshd_config

# Common settings to review/change:
-----------------------------------------------------------
Port 22                     # Default port; change to custom (e.g., 2222)
PermitRootLogin no          # Disable root login for better security
PasswordAuthentication yes  # Allow password login (or set to no for key-based)
PubkeyAuthentication yes    # Enable SSH key-based authentication
-----------------------------------------------------------

# After saving changes, restart the SSH service:
sudo systemctl restart ssh

===========================================================
🔍  4. CHECK FIREWALL SETTINGS (UFW)
===========================================================

# Check if UFW firewall is active
sudo ufw status

# Allow SSH through firewall (default port 22)
sudo ufw allow ssh

# OR allow specific port (e.g., 2222)
sudo ufw allow 2222/tcp

# Reload firewall rules
sudo ufw reload

# Enable firewall if not already
sudo ufw enable

# Verify again
sudo ufw status verbose

===========================================================
🔑  5. SSH KEY GENERATION (CLIENT SIDE)
===========================================================

# Generate SSH key pair (RSA)
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

# Optional key types:
# - RSA: ssh-keygen -t rsa -b 4096
# - ECDSA: ssh-keygen -t ecdsa -b 521
# - ED25519: ssh-keygen -t ed25519

# Default key location:
# ~/.ssh/id_rsa (private key)
# ~/.ssh/id_rsa.pub (public key)

# View generated keys
ls ~/.ssh/

# Show public key content
cat ~/.ssh/id_rsa.pub

===========================================================
📤  6. COPY SSH KEY TO REMOTE SERVER
===========================================================

# Easiest method (automatic key copy)
ssh-copy-id username@remote_host

# Example:
ssh-copy-id murugan@192.168.1.10

# Manual method:
# Copy the public key to remote server’s authorized_keys file
cat ~/.ssh/id_rsa.pub | ssh username@remote_host "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

===========================================================
🔗  7. CONNECT TO REMOTE SERVER
===========================================================

# Basic connection
ssh username@remote_host

# Example:
ssh murugan@192.168.1.10

# Connect using custom port
ssh -p 2222 username@remote_host

# Connect with identity file (private key)
ssh -i ~/.ssh/id_rsa username@remote_host

# Run single command remotely
ssh username@remote_host "hostname && uptime"

===========================================================
📂  8. FILE TRANSFER USING SCP
===========================================================

# Copy file from local → remote
scp file.txt username@remote_host:/home/username/

# Copy file from remote → local
scp username@remote_host:/home/username/file.txt /local/path/

# Copy entire directory (recursive)
scp -r /local/dir username@remote_host:/home/username/

# Use custom port
scp -P 2222 file.txt username@remote_host:/path/

===========================================================
🧳  9. FILE TRANSFER USING SFTP (INTERACTIVE)
===========================================================

# Start SFTP session
sftp username@remote_host

# Common commands inside SFTP:
-----------------------------------------------------------
ls              → List remote files
lls             → List local files
cd /path/       → Change remote directory
lcd /path/      → Change local directory
get file.txt    → Download file
put file.txt    → Upload file
mget *          → Download multiple files
mput *          → Upload multiple files
exit            → Close SFTP session
-----------------------------------------------------------

===========================================================
🧰  10. TEST & DEBUG SSH CONNECTIONS
===========================================================

# Test SSH connection without logging in
ssh -v username@remote_host

# Increase verbosity for troubleshooting
ssh -vvv username@remote_host

# Check SSH listening port
sudo ss -tnlp | grep ssh

# View SSH logs
sudo journalctl -u ssh
# OR
sudo tail -f /var/log/auth.log

===========================================================
🔒  11. SECURE SSH SERVER (BEST PRACTICES)
===========================================================

# Disable root login
sudo sed -i 's/^#PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config

# Change default SSH port (example: 2222)
sudo sed -i 's/^#Port 22/Port 2222/' /etc/ssh/sshd_config

# Restart service
sudo systemctl restart ssh

# Disable password login (key-only access)
sudo sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
sudo systemctl restart ssh

# Install fail2ban for brute-force protection
sudo apt install fail2ban -y

===========================================================
📋  12. OTHER USEFUL SSH COMMANDS
===========================================================

# Show current SSH connections
who

# Show SSH service info
sudo systemctl show ssh | grep ActiveState

# Kill a specific SSH session
sudo pkill -u username sshd

# Verify open port for SSH
sudo netstat -tuln | grep 22

# Copy SSH key manually between systems
cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

===========================================================
🚀  13. REMOVE OR REINSTALL SSH
===========================================================

# Stop and remove SSH
sudo systemctl stop ssh
sudo apt remove openssh-server -y
sudo apt purge openssh-server -y

# Reinstall SSH
sudo apt install openssh-server -y

===========================================================
✅  14. QUICK TEST
===========================================================

# Local SSH test (connect to self)
ssh localhost

# If connection successful, SSH server is working perfectly!
